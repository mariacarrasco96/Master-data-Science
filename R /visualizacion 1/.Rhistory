instalar <- function (pkg) if (!pkg %in% installed.packages()) install.packages(pkg)
instalar("ggplot2")
instalar("shiny")
instalar("shinythemes")
instalar("DT")
instalar("plotly")
library(ggplot2)
library(ggplot2)
mpg
ntcars
mtcars
#forma clasica ggplot: ggplot(datos, aes())
ggplot(mpg, aes(class))
#forma clasica ggplot: ggplot(datos, aes())
ggplot(mpg, aes(class)) + geom_bar()
nlfunction <- function(calamar) (calamar + 2)
nlfunction(calamar=5)
ggplot(mpg, aes(class)) + geom_point()
ggplot(mpg, (x=(class), y= (displ)) + geom_point()
ggplot(mpg, aes(x=(class), y= (displ)) + geom_point()
ggplot(mpg, aes(x=(class), y= (displ)) + geom_point()
ggplot(mpg, aes(x=class, y= displ) + geom_point()
ggplot(mpg, aes(x=class, y= displ) + geom_point()
ggplot(mpg, aes(x=class y= displ) + geom_point()
ggplot(mpg, aes(x=class, y= displ)) + geom_point()
ggplot(mpg, aes(x=class, y= displ)) + geom_point(color)
ggplot(mpg, aes(x=class, y= displ)) + geom_point(color)
ggplot(mpg, aes(x=tamaÃ±o, y=color)) + geom_point()
ggplot(mpg, aes(x=size, y=color)) + geom_point()
ggplot(mpg, aes()) + geom_point(fill)
ggplot(mpg, aes(x=class, y=displ)) + geom_point(fill)
ggplot(mpg, aes(x=class, y=displ)) + geom_point(fill)
ggplot(mpg, aes(x=class, y=displ)) + geom_point(aes(colour = factor(cyl)))
ggplot(mpg, aes(x=cty, y=displ)) + geom_point(aes(colour = factor(cyl)))
ggplot(mpg, aes(x=cty, y=size)) + geom_point(aes(colour = factor(cyl)))
ggplot(mpg, aes(x=cty, y=displ)) + geom_point(aes(colour = factor(cyl)))
ggplot(mpg, aes(x=cty, y=displ)) + geom_point(aes(colour = factor(cyl), size= hwy))
ggplot(mpg, aes(x=cty, y=displ)) + geom_point(aes(colour = class, size= hwy))
ggplot(mpg, aes(x=cty, y=displ)) + geom_point(colour = "pink")
ggplot(mpg, aes(x=cty, y=displ)) +geom_bar()+ geom_point(aes(colour = class, size= hwy))
ggplot(mpg, aes(x=cty, y=displ)) +geom_bar(aes(x=cty, y=displ))+ geom_point(aes(colour = class, size= hwy))
ggplot(mpg, aes(x=cty, y=displ)) +geom_bar(aes(cty, displ))+ geom_point(aes(colour = class, size= hwy))
ggplot(mpg, aes(x=cty, y=displ)) +geom_bar(cty, displ)+ geom_point(aes(colour = class, size= hwy))
ggplot(mpg, aes(x=cty, y=displ)) +geom_bar(aes(x=cty, y=displ))+ geom_point(aes(colour = class, size= hwy))
ggplot(mpg, aes(x=cty, y=displ)) + geom_bar(aes(x=cty, y=displ))+ geom_point(aes(colour = class, size= hwy))
ggplot(mpg, aes(x=cty, y=displ)) + geom_bar(aes(x=cty, y=displ))+ geom_point(aes(colour = class)
ggplot(mpg, aes(x=cty, y=displ)) + geom_bar(aes(x=cty, y=displ))+ geom_point(aes(colour = class)
ggplot(mpg, aes(x=cty, y=displ)) + geom_bar(aes(fill= cty))+ geom_point(aes(colour = class)
ggplot(mpg, aes(x=cty, y=displ)) + geom_bar(aes(fill= cty))+ geom_point(aes(colour = class)
ggplot(mpg, aes(x=cty, y=displ)) + geom_bar()+ geom_point(colour = class, size= hwy))
ggplot(mpg, aes(x=class, y=displ)) + geom_bar()+ geom_point(colour = class, size= hwy))
ggplot(mpg, aes(x=class, y=displ)) + geom_bar()+ geom_point(colour = class, y=displ))
ggplot(mpg, aes(x=class, y=displ)) + geom_bar()+ geom_point(colour = class, size = displ)
ggplot(mpg, aes(x=class, y=displ)) + geom_bar()+ geom_point(colour = class, size = hwy)
ggplot(mpg, aes(x=class, y=displ, size= hwy)) + geom_bar()+ geom_point(colour = class, size = hwy)
ggplot(mpg, aes(x=cty)) +   #pones los comunes, en la x hay elementos que son comunes a diferencia de la y
geom_bar(fill="grey") +   #fill va fuera porque es una cte no va dentro del aes
geom_point(aes(y = displ, color = class, size = hwy))
facet(cty~displ)
ggplot(facet(cty~displ))
facet_grid(cty~displ)
facet_grid()
ggplot(datos, aes(x=cty)) +
geom_bar(fill="grey") +
facet_grid(cty,displ)
ggplot(datos, aes(x=cty)) +
geom_bar(fill="grey") +
facet_grid(cty,displ)
ggplot(mpg, aes(x=cty)) +
geom_bar(fill="grey") +
facet_grid(cty,displ)
mpg
ggplot(mpg, aes(x=cty, y=displ)) +
geom_bar(fill="grey") +
facet_grid(cty,displ)
ggplot(mpg, aes(x=cty, y=displ)) +
geom_point() +
facet_grid()
ggplot(mpg, aes(x=cty, y=displ)) +
geom_point() +
facet_grid(cty,displ)
ggplot(mpg, aes(x=cty, y=displ)) +
geom_point() +
facet_grid(cty~displ)
ggplot(mpg, aes(x=cty, y=displ)) +
geom_point() +
facet_grid(cty~displ)
ggplot(mpg, aes(x=cty, y=displ)) +
geom_point() +
facet_grid(~year)
library(plotly)
migrafica <- ggplot(mpg, aes(x = cty)) +
geom_bar(fill = "Grey") +
geom_point( aes (y = displ, color = class , size = hwy)) +
facet_grid(.~ year)
library(shiny)
ggplotly(migrafica)
library(shiny)
library(shiny)
runApp('~/Documents/Tecnicas de visualizacion')
knitr::opts_chunk$set(echo = TRUE)
library(rsample)
library(glmnet)
install.packages("rsample")
install.packages("glmnet")
library(dplyr)
library(ggplot2)
library(nortest)
library(readr)
library(rsample)
library(glmnet)
library(dplyr)
library(ggplot2)
library(nortest)
library(readr)
library(datasets)
data(iris)
force(iris)
View(iris)
datos_iris<-rename(iris,"Long_Sepalo"="Sepal.Length","Ancho_Sepalo"="Sepal.Width",'Long_Petalo'='Petal.Length','Ancho_Petalo'="Petal.Width", "Especie"="Species")
setosa <- subset(datos_iris, Especie == "setosa")
versicolor <- subset(datos_iris, Especie == "versicolor")
virginica <- subset(datos_iris, Especie == "virginica")
summary(setosa)
summary (versicolor)
summary (virginica)
#Grafica para petalo
ggplot(datos_iris, aes(Long_Petalo, Ancho_Petalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
ggplot(datos_iris, aes(Long_Sepalo, Ancho_Sepalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
ggplot(datos_iris, aes(Long_Sepalo, Ancho_Sepalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
View(iris)
View(iris)
datos_iris<-rename(iris,"Largo_Sepalo"="Sepal.Length","Ancho_Sepalo"="Sepal.Width",'Largo_Petalo'='Petal.Length','Ancho_Petalo'="Petal.Width", "Especie"="Species")
View(datos_iris)
summary(setosa)
summary (versicolor)
summary (virginica)
setosa <- subset(datos_iris, Especie == "setosa")
versicolor <- subset(datos_iris, Especie == "versicolor")
virginica <- subset(datos_iris, Especie == "virginica")
## Hacemos summarys de cada especie para ver un poco los datos
```{r}
summary (versicolor)
summary (virginica)
setosa <- subset(datos_iris, Especie == "setosa")
versicolor <- subset(datos_iris, Especie == "versicolor")
virginica <- subset(datos_iris, Especie == "virginica")
summary(setosa)
summary (versicolor)
#Grafica para petalo
ggplot(datos_iris, aes(Long_Petalo, Ancho_Petalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
summary(setosa)
summary (versicolor)
summary (virginica)
## Graficamos
```{r}
#Grafica para petalo
ggplot(datos_iris, aes(Long_Petalo, Ancho_Petalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
ggplot(datos_iris, aes(Long_Sepalo, Ancho_Sepalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
library(rsample)
library(glmnet)
library(dplyr)
library(ggplot2)
library(nortest)
library(readr)
#Descargamos los datos ejecutando: data(iris)
```{r}
library(datasets)
data(iris)
# Renombramos a las variables
```{r}
datos_iris<-rename(iris,"Largo_Sepalo"="Sepal.Length","Ancho_Sepalo"="Sepal.Width",'Largo_Petalo'='Petal.Length','Ancho_Petalo'="Petal.Width", "Especie"="Species")
# Separamos por la especie de flor
```{r}
setosa <- subset(datos_iris, Especie == "setosa")
versicolor <- subset(datos_iris, Especie == "versicolor")
virginica <- subset(datos_iris, Especie == "virginica")
## Hacemos summarys de cada especie para ver un poco los datos
```{r}
summary(setosa)
summary (versicolor)
summary (virginica)
## Graficamos
```{r}
#Grafica para petalo
ggplot(datos_iris, aes(Long_Petalo, Ancho_Petalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
ggplot(datos_iris, aes(Long_Sepalo, Ancho_Sepalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
#Grafica para petalo
ggplot(datos_iris, aes(Largo_Petalo, Ancho_Petalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
#Grafica para petalo
ggplot(datos_iris, aes(Largo_Petalo, Ancho_Petalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
ggplot(datos_iris, aes(Long_Sepalo, Ancho_Sepalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
ggplot(datos_iris, aes(Largo_Sepalo, Ancho_Sepalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
ggplot(datos_iris, aes(Largo_Petalo, Ancho_Petalo)) +
geom_point(aes(color = datos_iris$Especie), size = 3)
summary(setosa)
summary (versicolor)
summary (virginica)
