}
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci(10)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(10)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(20)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(10)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(10)
fibonacci<-function(n){
if(n<0){
return("Escribe numeros enteros positvos")
}
if(n>0) {
seqfibonacci<-seq(0,n)
seqfibinacci[1]<-0
seqfibonacci[2]<-1
for(i in 3:n){
seqfibonacci[i]<-seqfibonacci[i-1]+seqfibonacci[i-2]
}
return(seqfibonacci)
}
}
fibonacci(10)
fibonacci(10)
fibonacci<-function(n){
if(n<1){#no se pueden numeros negativos
return("escrine numeros enteros positivos")
}
if(n>0){#si n es mayor que 0 entonces..
sfibo<-seq(0,n)#haz una secuencia de 0 a n
for(i in 3:n){#y al llegar al tercer elemento
sfibo[i]<-sfibo[i-1]+sfibo[i-2]#machacamos sfib[i] por la siguiente expresion para q a partir del 3 todos los numeros que vengan detras sigan la secuencia fibonacci
}
return(sfibo)
}
}
fibonacci(20)
fibonacci(10)
qpois(0.95,0.78)
clientes_data<- read.csv("~/Desktop/LA CESTA.csv.xls")
clientes_data
mean(clientes_data$x)
sd(clientes_data$x)
clientes_data<- read.csv("~/Desktop/LA CESTA.csv.xls")
clientes_data<- read.csv("./LA CESTA.csv")
clientes_data<- read.csv("/Users/mariacarrasco/Documents/FUNAMENTOS PARA EL ANÁLISIS DE DATOS/LA CESTA.cvs"")
clientes_data
sd(clientes_data$x)
mean(clientes_data$x)
#a.Quéen un minuto cualquiera no acceda ningún cliente.
clientes_data<- read.csv(/Users/mariacarrasco/Documents/FUNAMENTOS PARA EL ANÁLISIS DE DATOS/LA CESTA.csv)
mean(clientes_data$x)
sd(clientes_data$x)
mean(clientes_data$x)
library(readr)
LA_CESTA <- read_csv("~/Documents/FUNAMENTOS PARA EL ANÁLISIS DE DATOS/LA CESTA.csv")
View(LA_CESTA)
library(readr)
LA_CESTA <- read_csv("~/Documents/FUNAMENTOS PARA EL ANÁLISIS DE DATOS/LA CESTA.csv")
View(LA_CESTA)
clientes_data<- read.csv(/Users/mariacarrasco/Documents/FUNAMENTOS PARA EL ANÁLISIS DE DATOS/LA CESTA.csv)
mean(clientes_data$x)
sd(clientes_data$x)
clientes_data<- read.csv("/Users/mariacarrasco/Documents/FUNAMENTOS PARA EL ANÁLISIS DE DATOS/LA CESTA.cvs")
clientes_data<- read.csv("/Users/mariacarrasco/Documents/FUNAMENTOS PARA EL ANÁLISIS DE DATOS/LA CESTA.csv")
mean(clientes_data$x)
sd(clientes_data$x)
dpois(x=0, lambda=0.78)
sum(dpois(x=2:5,lambda=0.78))
ppois(2:5,0.78)
dpois(x=3,lambda=0.78)
mediaencincomin <- 0.78*5
mediaencincomin
ppois(q=10, lambda = 3.9, lower.tail = FALSE)
qpois(0.95,0.78)
clientes_data<- read.csv("/Users/mariacarrasco/Documents/FUNAMENTOS PARA EL ANÁLISIS DE DATOS/LA CESTA.csv")
clientes_data<- read.csv("/Users/mariacarrasco/Documents/FUNAMENTOS PARA EL ANÁLISIS DE DATOS/LA CESTA.csv")
mean(clientes_data$x)
sd(clientes_data$x)
dpois(x=0, lambda=0.78)
sum(dpois(x=2:5,lambda=0.78))
ppois(2:5,0.78)
dpois(x=3,lambda=0.78)
mediaencincomin <- 0.78*5
mediaencincomin
ppois(q=10, lambda = 3.9, lower.tail = FALSE)
qpois(0.95,0.78)
sum(dpois(x=2:5,lambda=0.78))
ppois(2:5,0.78)
qpois(0.95,0.78)
comp<-rnorm(500, mean = 0.69, sd = 0.96)
comp<-as.data.frame(comp)
dif_mean <- t.test(comp, cesta$x)
dif_mean
View(comp)
View(comp)
dif_mean <- t.test(comp, clientes_data$x)
dif_mean
#a.Qué en un minuto cualquiera no acceda ningún cliente.
ppoisson(0)
mean(clientes_data$x)
qpois(0.95,0.78)
clientes_data<- read.csv("/Users/mariacarrasco/Documents/FUNAMENTOS PARA EL ANÁLISIS DE DATOS/LA CESTA.csv")
mean(clientes_data$x)
sd(clientes_data$x)
#a.Qué en un minuto cualquiera no acceda ningún cliente.
ppoisson(0)
dpois(x=0, lambda=0.78)
dpois(x=0, lambda=0.78)
clientes_data<- read.csv("/Users/mariacarrasco/Documents/FUNAMENTOS PARA EL ANÁLISIS DE DATOS/LA CESTA.csv")
mean(clientes_data$x)
sd(clientes_data$x)
var(clientes_data$x)
mean(clientes_data$x)
sd(clientes_data$x)
var(clientes_data$x)
dpois(x=0, lambda=0.78)
sum(dpois(x=2:5,lambda=0.78))
dpois(x=0, lambda=0.78)
sum(dpois(x=2:5,lambda=0.78))
ppois(2:5,0.78)
dpois(x=0, lambda=0.78)
sum(dpois(x=2:5,lambda=0.78))
sum(dpois(x=2:5,lambda=0.78))
mediaencincomin <- 0.78*5
mediaencincomin
View(clientes_data)
View(clientes_data)
ppois(q=10, lambda = 3.9, lower.tail = FALSE)
lower.tail?
#Adicionalmente,  será  necesario  conocer  también  entre  que  valores
#se  podría encontrar el número medio de clientes accediendo a la cola únic
#con un nivel de confianza del 95%.
ICalpha()
help(lower.tail)
??lower.tail
dpois(q=10, lambda = 3.9, lower.tail = FALSE)#lower.tail: you want the probability of values z or larger
ppois(q=10, lambda = 3.9, lower.tail = FALSE)#lower.tail: you want the probability of values z or larger
??ppois
ppois(x=10, lambda = 3.9, lower.tail = FALSE)#lower.tail: you want the probability of values z or larger
ppois(q=10, lambda = 3.9, lower.tail = FALSE)#lower.tail: you want the probability of values z or larger
ppois(q=10, lambda = 3.9, lower.tail = TRUE)#lower.tail: you want the probability of values z or larger
ppois(q=10, lambda = 3.9, lower.tail = FALSE)#lower.tail: you want the probability of values z or larger
comp<-rnorm(500, mean = 0.69, sd = 0.96)
comp<-as.data.frame(comp)
dif_mean <- t.test(comp, clientes_data$x)
dif_mean
ppois(c(10), 3.9, lower.tail = FALSE)
ppois(q=10, lambda = 3.9, lower.tail = FALSE)#lower.tail: you want the probability of values z or larger
View(comp)
comp<-rnorm(500, mean = 0.69, sd = 0.96)
comp<-as.data.frame(comp)
dif_mean <- t.test(comp, clientes_data$x)
dif_mean
qpois(0.95,0.78)
qpois(c(0.95,0.78)
quantile(y,  probs = c(0.95,0.78))
quantile(y,  qpois = c(0.95,0.78))
quantile(0.78,  qpois = c(0.25,0.95))
quantile(qpois = c(0.25,0.95))
quantile(x=0, qpois = c(0.25,0.95))
quantile(x=[0,1], qpois = c(0.25,0.95))
mean(clientes_data$x)
quantile(x=mean(clientes_data$x), qpois = c(0.25,0.95))
qpois(0.95,0.78)
quantile(2)
quantile(0.78)
qpois(0.95,0.78)
quantile(0.78)
qpois(c(0.025,0.975) , 0,78)
qpois((0.025,0.975) , 0,78)
qpois(c(0.025,0.975) , 0,78)
qpois(c(0.025,0.975) , 0,78)
qpois(c(0.025,0.975) , 0,78)
qpois(c(0.025,0.95) , 0,78)
